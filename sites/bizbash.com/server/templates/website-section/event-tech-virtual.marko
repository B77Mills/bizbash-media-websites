import { getAsObject } from "@parameter1/base-cms-object-path";
import hierarchyAliases from "@parameter1/base-cms-marko-web/utils/hierarchy-aliases";
import queryFragment from '@bizbash-media/package-global/graphql/fragments/content-list';

$ const { GAM, nativeX: nxConfig, site } = out.global;
$ const { id, alias, name, pageNode } = data;

<marko-web-website-section-page-layout id=id alias=alias name=name>
  <@head>
    <marko-web-gtm-website-section-context|{ context }| alias=alias>
      <marko-web-gtm-push data=context />
    </marko-web-gtm-website-section-context>
    <marko-web-resolve-page|{ data: section }| node=pageNode>
      $ const aliases = hierarchyAliases(section);
      $ const adSlots = {
        'gpt-ad-lb1': GAM.getAdUnit(site, { name: 'lb1', aliases }),
        'gpt-ad-lb2': GAM.getAdUnit(site, { name: 'lb2', aliases }),
        'gpt-ad-rail1': GAM.getAdUnit(site, { name: 'rail1', aliases, size: [300, 600] }),
      };
      <marko-web-gam-slots slots=adSlots />
    </marko-web-resolve-page>
  </@head>
  <@above-container>
    <marko-web-gam-display-ad id="gpt-ad-lb1" modifiers=["above-container"] />
    <marko-web-gtm-slot prefix=site.get("gtm.slotPrefix") name="home-top-below-head" modifiers=["above-container"] />
  </@above-container>
  <@page>
    <marko-web-resolve-page|{ data: section, resolved }| node=pageNode>
      $ const aliases = hierarchyAliases(section);
      <marko-web-page-wrapper modifiers=["no-bottom-padding"]>
        <@section>
          <global-breadcrumbs-website-section section=section />
          <marko-web-website-section-name tag="h1" class="page-wrapper__title" obj=section />
          <marko-web-website-section-description tag="p" class="page-wrapper__description" obj=section />
        </@section>
      </marko-web-page-wrapper>
      <div class="row">
        <div class="col-lg-4 mb-block">
          <marko-web-query|{ nodes }|
            name="website-scheduled-content"
            params={ sectionAlias: "event-tech-virtual/event-tech-tools", limit: 5, queryFragment }
          >
            <global-content-list-flow nodes=nodes>
              <@header>
                <marko-web-link href="/event-tech-virtual/event-tech-tools">Event Tech & Tools</marko-web-link>
              </@header>
            </global-content-list-flow>
          </marko-web-query>
        </div>
        <div class="col-lg-4 ad-rail">
          <marko-web-gam-display-ad id="gpt-ad-rail1" />
        </div>
        <div class="col-lg-4 mb-block">
          <marko-web-query|{ nodes }|
            name="website-scheduled-content"
            params={ sectionAlias: "event-tech-virtual/strategy", limit: 5, queryFragment }
          >
            <global-content-list-flow nodes=nodes>
              <@header>
                <marko-web-link href="/event-tech-virtual/strategy">Strategy</marko-web-link>
              </@header>
            </global-content-list-flow>
          </marko-web-query>
        </div>
      </div>
    </marko-web-resolve-page>
  </@page>
  <@below-page>
    <marko-web-resolve-page|{ data: section }| node=pageNode>
      $ const aliases = hierarchyAliases(section);
      <marko-web-load-more
        component-name="content-load-more-flow"
        component-input={ aliases }
        fragment-name="content-list"
        query-name="website-scheduled-content"
        query-params={ sectionId: id, limit: 14, requiresImage: true }
        max-pages=0
        page-input={ for: "website-section", id }
      />
    </marko-web-resolve-page>
  </@below-page>
</marko-web-website-section-page-layout>
