import queryFragment from "../../graphql/fragments/section-card-block";
import sectionFragment from "../../graphql/fragments/section-info";
$ const queryParams = {
  sectionAlias: "on-demand/gathergeeks",
  limit: 1,
  queryFragment,
  sectionFragment,
};
$ const blockName = "section-card-block";
$ const allNodes = [];
$ const { GAM } = out.global;

<marko-web-block name=blockName>
  <marko-web-element block-name=blockName name="header">
    Webinars & Podcasts
  </marko-web-element>
  <marko-web-element block-name=blockName name="view-more">
    <marko-web-link href="/on-demand">
      View more &raquo;
    </marko-web-link>
  </marko-web-element>
  <div class="row my-block">
    <div class="col-sm-12 col-md-6 col-lg-4 my-md-block">
      <marko-web-gam-define-display-ad ...GAM.getAdUnit({ name: "vid", aliases: ['home'] }) modifiers=["no-shadow"] />
    </div>
    <div class="col-sm-12 col-md-6 col-lg-4">
      <marko-web-query|{ nodes }| name="all-published-content" params={ contentTypes: ["Webinar"], limit: 1, queryFragment }>
        <global-content-card-node node=nodes[0] display-image=input.displayImage title-modifiers=["small"] />
      </marko-web-query>
    </div>
    <div class="col-sm-12 col-md-6 col-lg-4">
      <marko-web-query|{nodes, section }| name="website-scheduled-content" params=queryParams>
        <global-content-card-node node=nodes[0] display-image=input.displayImage title-modifiers=["small"] />
      </marko-web-query>
    </div>
  </div>
    <marko-web-element block-name=blockName name="view-more-bottom">
      <marko-web-link href="/on-demand">
        View more &raquo;
      </marko-web-link>
    </marko-web-element>
</marko-web-block>
